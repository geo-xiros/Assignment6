@model Assignment6.Models.Registration
@using Assignment6.Models

@{
    ViewBag.Title = "Register";
    var user = Session["user"] as User;

    var loggedIn = user != null;
    var registerActionName = loggedIn ? "RegisterAgain" : "Register";
    var submitButtonCaption = loggedIn ? "Add Role" : "Register";

}

<h2>@submitButtonCaption</h2>


@using (Html.BeginForm(registerActionName, "Register"))
{
    @Html.AntiForgeryToken()

<div class="form-horizontal">
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })

    @if (loggedIn)
    {
        <h4>@user.Username</h4>
        <input hidden type="text" value="@user.Id" name="Id" />
        <input hidden type="text" value="@user.Username" name="Username" />
        @Html.ValidationMessageFor(model => model.Username, "", new { @class = "text-danger" })
    }
    else
    {
        <div class="form-group">
            @Html.LabelFor(model => model.Username, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Username, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Username, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.Password, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Password, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })
            </div>
        </div>
    }

    <div class="form-group">
        @Html.LabelFor(model => model.RoleId, "RoleId", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DropDownList("RoleId", null, htmlAttributes: new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.RoleId, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="@submitButtonCaption" class="btn btn-default" />
        </div>
    </div>
</div>
}


@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
